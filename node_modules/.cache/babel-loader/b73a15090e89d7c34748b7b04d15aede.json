{"ast":null,"code":"var _jsxFileName = \"/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/login.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      seller: false,\n      user: \"\",\n      newUser: \"\",\n      isSeller: false\n    };\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.login = this.login.bind(this);\n    this.createUser = this.createUser.bind(this);\n    this.getUser = this.getUser.bind(this);\n    this.postUser = this.postUser.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n  }\n\n  async getUser(name) {\n    // await fetch(`http://localhost:8080/user/${name.toLowerCase()}`, {\n    await fetch(`http://localhost:8080/user/${name}`, {\n      method: 'GET'\n    }).then(response => response.json()).then(responseJSON => {\n      this.setState({\n        seller: responseJSON[0].seller\n      });\n      this.setState({\n        loggedIn: true\n      });\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n\n  async postUser(newUser) {\n    // newUser.name = newUser.name.toLowerCase();\n    await fetch('http://localhost:8080/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    }).then(response => {\n      if (!response.ok) {\n        throw new Error();\n      }\n    });\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    try {\n      await this.getUser(this.state.user);\n    } catch (err) {\n      alert(\"User does not exist\");\n      this.setState({\n        user: \"\",\n        newUser: \"\",\n        isSeller: false\n      });\n    }\n  }\n\n  async createUser(event) {\n    event.preventDefault();\n\n    try {\n      let newUser = {\n        name: this.state.newUser,\n        seller: this.state.isSeller\n      };\n      await this.postUser(newUser);\n      alert(\"User created\");\n    } catch (err) {\n      alert(\"User already exists!\");\n    }\n\n    this.setState({\n      user: \"\",\n      newUser: \"\",\n      isSeller: false\n    });\n  }\n\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  handleCheckboxChange(event) {\n    const checked = event.target.checked;\n    this.setState({\n      [event.target.name]: checked\n    });\n  }\n\n  renderForm() {\n    if (this.state.loggedIn) {\n      if (this.state.seller) {\n        // return (\n        //   <Redirect to={{ pathname: '/seller', state: { user: this.state.user.toLowerCase() } }} />\n        // );\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/seller',\n            state: {\n              user: this.state.user\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this);\n      } // return (\n      //   <Redirect to={{ pathname: '/shop', state: { user: this.state.user.toLowerCase(), cart: []} }} />\n      // );\n\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/shop',\n          state: {\n            user: this.state.user,\n            cart: []\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.login,\n          children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"user\",\n            value: this.state.user,\n            onChange: this.handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"loginButton\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Create user\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.createUser,\n          children: [\"Username: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newUser\",\n            value: this.state.newUser,\n            onChange: this.handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"checkbox\",\n            id: \"seller\",\n            name: \"isSeller\",\n            checked: this.state.isSeller,\n            onChange: this.handleCheckboxChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"seller\",\n            children: \" Seller\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            id: \"createUserButton\",\n            children: \"Create User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.renderForm()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/login.js"],"names":["React","Redirect","Login","Component","constructor","props","state","loggedIn","seller","user","newUser","isSeller","handleTextChange","bind","handleCheckboxChange","login","createUser","getUser","postUser","renderForm","name","fetch","method","then","response","json","responseJSON","setState","catch","err","Error","headers","body","JSON","stringify","ok","event","preventDefault","alert","value","target","checked","pathname","cart","render"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      loggedIn: false,\n      seller: false,\n      user: \"\",\n      newUser: \"\",\n      isSeller: false,\n    };\n    this.handleTextChange=this.handleTextChange.bind(this);\n    this.handleCheckboxChange=this.handleCheckboxChange.bind(this);\n    this.login=this.login.bind(this);\n    this.createUser=this.createUser.bind(this);\n    this.getUser=this.getUser.bind(this);\n    this.postUser=this.postUser.bind(this);\n    this.renderForm=this.renderForm.bind(this);\n  }\n\n  async getUser(name) {\n    // await fetch(`http://localhost:8080/user/${name.toLowerCase()}`, {\n    await fetch(`http://localhost:8080/user/${name}`, {\n      method: 'GET',\n    })\n    .then(response => response.json())\n    .then(responseJSON => {\n      this.setState({ seller: responseJSON[0].seller });\n      this.setState({ loggedIn: true })\n    })\n    .catch(err => {\n      throw new Error(err);\n    })\n  }\n\n  async postUser(newUser) {\n    // newUser.name = newUser.name.toLowerCase();\n    await fetch('http://localhost:8080/user', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    }).then(response => {\n      if (!response.ok){\n        throw new Error();\n      }\n    })\n  }\n\n  async login(event) {\n    event.preventDefault();\n\n    try {\n      await this.getUser(this.state.user);\n    } catch (err) {\n      alert(\"User does not exist\");  \n      this.setState({ user: \"\", newUser: \"\", isSeller: false });\n    }\n\n  }\n\n  async createUser(event) {\n    event.preventDefault();\n\n    try {\n      let newUser = {name: this.state.newUser, seller: this.state.isSeller};\n      await this.postUser(newUser);\n      alert(\"User created\");\n    } catch (err) {\n      alert(\"User already exists!\");\n    }\n\n    this.setState({ user: \"\", newUser: \"\", isSeller: false });\n  }\n\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  handleCheckboxChange(event) {\n    const checked = event.target.checked;\n    this.setState({\n      [event.target.name]: checked\n    });\n  }\n\n  renderForm() {\n    if (this.state.loggedIn) {\n      if (this.state.seller) {\n        // return (\n        //   <Redirect to={{ pathname: '/seller', state: { user: this.state.user.toLowerCase() } }} />\n        // );\n        return (\n          <Redirect to={{ pathname: '/seller', state: { user: this.state.user } }} />\n        );\n      }\n      // return (\n      //   <Redirect to={{ pathname: '/shop', state: { user: this.state.user.toLowerCase(), cart: []} }} />\n      // );\n      return (\n        <Redirect to={{ pathname: '/shop', state: { user: this.state.user, cart: []} }} />\n      );\n    }\n\n    return (\n      <div>\n        <h2>Login</h2>\n        <div className=\"login\">\n          <form onSubmit={this.login}>\n            Username: <input type=\"text\" name=\"user\" value={this.state.user} onChange={this.handleTextChange}></input>\n            <br />\n            <button id=\"loginButton\">\n              Login\n            </button>\n          </form>\n        </div>\n        <br />\n        <br />\n        <h2>Create user</h2>\n        <div className=\"login\">\n          <form onSubmit={this.createUser}>\n            Username: <input type=\"text\" name=\"newUser\" value={this.state.newUser} onChange={this.handleTextChange}></input>\n            <br />\n            <input type=\"checkbox\" id=\"seller\" name=\"isSeller\" checked={this.state.isSeller} onChange={this.handleCheckboxChange} />\n            <label htmlFor=\"seller\"> Seller</label>\n            <br />\n            <button id=\"createUserButton\">\n              Create User\n            </button>\n          </form>\n          <br />\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderForm()}\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}