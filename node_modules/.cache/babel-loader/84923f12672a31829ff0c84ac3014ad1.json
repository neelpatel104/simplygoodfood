{"ast":null,"code":"var _jsxFileName = \"/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/components/pages/Payment.js\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Payment extends React.Component {\n  constructor(props) {\n    super(props);\n    let token = document.cookie.split('; ').find(row => row.startsWith('token'));\n    token = token.split('=')[1];\n    var user;\n    let cart = [];\n    let pastOrders = [];\n\n    if (this.props.location.state === undefined) {\n      user = \"\";\n    } else {\n      user = this.props.location.state.user;\n      cart = this.props.location.state.cart;\n      pastOrders = this.props.location.state.pastOrders;\n    } // Initialize totalPriceForItem for each item to 0, this will be updated when Checkout is mounted\n\n\n    for (let i = 0; i < cart.length; i++) {\n      for (let j = 0; j < cart[i].length; j++) {\n        cart[i][j].totalPriceForItem = 0;\n\n        if (cart[i][j].delivery === undefined) {\n          cart[i][j].delivery = false;\n        }\n      }\n    }\n\n    this.state = {\n      user: user,\n      items: cart,\n      total: 0,\n      token: token,\n      pastOrders: pastOrders,\n      checkout: false\n    };\n    this.onCheckout = this.onCheckout.bind(this);\n    this.calculateTotal = this.calculateTotal.bind(this);\n    this.purchase = this.purchase.bind(this);\n  } // Runs as soon as Checkout mounts\n  // Not in constructor to avoid warning\n\n\n  componentDidMount() {\n    this.calculateTotal();\n  }\n\n  calculateTotal() {\n    let newItems = this.state.items;\n    let totalPrice = 0;\n\n    for (let i = 0; i < newItems.length; i++) {\n      let maxDeliveryFee = 0;\n\n      for (let j = 0; j < newItems[i].length; j++) {\n        // Calculate total price for item\n        newItems[i][j].totalPriceForItem = +newItems[i][j].price * +newItems[i][j].amountToBuy;\n\n        if (newItems[i][j].delivery && newItems[i][j].deliveryFee > maxDeliveryFee) {\n          // newItems[i][j].totalPriceForItem = +newItems[i][j].totalPriceForItem + +newItems[i][j].deliveryFee;\n          maxDeliveryFee = newItems[i][j].deliveryFee;\n        } // Update total price for transaction\n\n\n        totalPrice += newItems[i][j].totalPriceForItem; // Rounding\n\n        newItems[i][j].totalPriceForItem = Math.round(newItems[i][j].totalPriceForItem * 100) / 100;\n      }\n\n      totalPrice = +totalPrice + +maxDeliveryFee;\n      totalPrice = Math.round(totalPrice * 100) / 100;\n    }\n\n    this.setState({\n      total: totalPrice\n    });\n  }\n\n  onCheckout() {\n    this.setState({\n      checkout: true\n    });\n  } // Change after demo day\n\n\n  async putFood(seller, newItem) {\n    await fetch(`http://localhost:8080/foodItems/${seller}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify(newItem)\n    }).then(response => {// Do nothing\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n\n  async postOrder(newOrder) {\n    await fetch('http://localhost:8080/orders', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.state.token}`\n      },\n      body: JSON.stringify(newOrder)\n    }).then(response => {// Do nothing\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n\n  async purchase(event) {\n    event.preventDefault();\n\n    if (this.state.items.length <= 0) {\n      return;\n    }\n\n    for (let i = 0; i < this.state.items.length; i++) {\n      for (let j = 0; j < this.state.items[i].length; j++) {\n        let newItem = {\n          name: this.state.items[i][j].name,\n          price: this.state.items[i][j].price,\n          quantity: this.state.items[i][j].quantity,\n          pickup: this.state.items[i][j].pickup,\n          deliveryFee: this.state.items[i][j].deliveryFee\n        }; // if (newItem.quantity <= 0) {\n        // await this.deleteFood(this.state.items[i][j].seller[0].email, newItem.name);\n        // } else {\n\n        await this.putFood(this.state.items[i][j].seller[0].email, newItem); // }\n      }\n    } // Add orders to database\n\n\n    for (let i = 0; i < this.state.items.length; i++) {\n      let newOrder = {};\n\n      if (this.state.items[i][0].delivery) {\n        newOrder = {\n          seller: this.state.items[i][0].seller[0].name,\n          buyer: this.state.user,\n          foodItems: this.state.items[i],\n          address: this.state.items[i][0].seller[0].address,\n          type: \"delivery\"\n        };\n      } else {\n        newOrder = {\n          seller: this.state.items[i][0].seller[0].name,\n          buyer: this.state.user,\n          foodItems: this.state.items[i],\n          address: this.state.items[i][0].seller[0].address,\n          type: \"pickup\"\n        };\n      }\n\n      await this.postOrder(newOrder);\n    } // Remove after demo\n\n\n    let newOrders = this.state.pastOrders;\n\n    for (let i = 0; i < this.state.items.length; i++) {\n      let totalPriceForSeller = 0;\n      let maxDeliveryFee = 0;\n\n      for (let j = 0; j < this.state.items[i].length; j++) {\n        // Update total price for transaction\n        totalPriceForSeller += this.state.items[i][j].totalPriceForItem; // Rounding\n\n        totalPriceForSeller = Math.round(totalPriceForSeller * 100) / 100;\n\n        if (this.state.items[i][j].deliveryFee > maxDeliveryFee) {\n          maxDeliveryFee = this.state.items[i][j].deliveryFee;\n        }\n      }\n\n      if (this.state.items[i][0].delivery) {\n        totalPriceForSeller += maxDeliveryFee;\n        totalPriceForSeller = Math.round(totalPriceForSeller * 100) / 100;\n        newOrders.push({\n          seller: this.state.items[i][0].seller[0].name,\n          time: \"11/19/2021\",\n          total: totalPriceForSeller,\n          buyer: this.state.user,\n          foodItems: this.state.items[i],\n          address: this.state.items[i][0].seller[0].address,\n          type: \"Delivery\"\n        });\n      } else {\n        newOrders.push({\n          seller: this.state.items[i][0].seller[0].name,\n          time: \"11/19/2021\",\n          total: totalPriceForSeller,\n          buyer: this.state.user,\n          foodItems: this.state.items[i],\n          address: this.state.items[i][0].seller[0].address,\n          type: \"Pickup\"\n        });\n      }\n    }\n\n    this.setState({\n      pastOrders: newOrders\n    });\n    console.log(newOrders);\n    this.setState({\n      items: []\n    });\n    this.setState({\n      total: 0\n    });\n    alert(\"Thank you for your purchase!\");\n    this.setState({\n      checkout: true\n    });\n  }\n\n  render() {\n    if (this.state.user === \"\") {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this);\n    }\n\n    if (this.state.checkout) {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/Checkout',\n          state: {\n            user: this.state.user,\n            cart: this.state.items,\n            pastOrders: this.state.pastOrders\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          className: \"pageheader\",\n          children: [\"Total: $\", this.state.total.toFixed(2)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"selectButton\",\n          onClick: this.onCheckout,\n          children: \"Return to Cart\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Payment Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.purchase,\n          id: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Billing Address: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"text\",\n              name: \"billingAddress\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Credit Card Number: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"text\",\n              name: \"cardNumber\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form-control selectButton\",\n              children: \"Purchase\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/components/pages/Payment.js"],"names":["React","Redirect","Payment","Component","constructor","props","token","document","cookie","split","find","row","startsWith","user","cart","pastOrders","location","state","undefined","i","length","j","totalPriceForItem","delivery","items","total","checkout","onCheckout","bind","calculateTotal","purchase","componentDidMount","newItems","totalPrice","maxDeliveryFee","price","amountToBuy","deliveryFee","Math","round","setState","putFood","seller","newItem","fetch","method","credentials","headers","body","JSON","stringify","then","response","catch","err","Error","postOrder","newOrder","event","preventDefault","name","quantity","pickup","email","buyer","foodItems","address","type","newOrders","totalPriceForSeller","push","time","console","log","alert","render","pathname","toFixed"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\n\nexport default class Payment extends React.Component {\n  constructor(props) {\n    super(props);\n    \n    let token = document.cookie.split('; ').find(row => row.startsWith('token'));\n    token = token.split('=')[1];\n    \n    var user;\n    let cart = [];\n    let pastOrders = [];\n    if (this.props.location.state === undefined) {\n      user = \"\";\n    } else {\n      user = this.props.location.state.user;\n      cart = this.props.location.state.cart;\n      pastOrders = this.props.location.state.pastOrders;\n    }\n\n    // Initialize totalPriceForItem for each item to 0, this will be updated when Checkout is mounted\n    for (let i = 0; i < cart.length; i++) {\n      for (let j = 0; j < cart[i].length; j++) {\n        cart[i][j].totalPriceForItem = 0;\n        if (cart[i][j].delivery === undefined) {\n          cart[i][j].delivery = false;\n        }\n      }\n    }\n\n    this.state = {\n      user: user,\n      items: cart,\n      total: 0,\n      token: token,\n      pastOrders: pastOrders,\n      checkout: false,\n    };\n\n    this.onCheckout=this.onCheckout.bind(this);\n    this.calculateTotal=this.calculateTotal.bind(this);\n    this.purchase=this.purchase.bind(this);\n  }\n\n  // Runs as soon as Checkout mounts\n  // Not in constructor to avoid warning\n  componentDidMount() {\n    this.calculateTotal();\n  }\n\n  calculateTotal() {\n    let newItems = this.state.items;\n    let totalPrice = 0;\n    for (let i = 0; i < newItems.length; i++) {\n      let maxDeliveryFee = 0;\n      for (let j = 0; j < newItems[i].length; j++) {\n        // Calculate total price for item\n        newItems[i][j].totalPriceForItem = +newItems[i][j].price * +newItems[i][j].amountToBuy;\n        if (newItems[i][j].delivery && newItems[i][j].deliveryFee > maxDeliveryFee) {\n          // newItems[i][j].totalPriceForItem = +newItems[i][j].totalPriceForItem + +newItems[i][j].deliveryFee;\n          maxDeliveryFee = newItems[i][j].deliveryFee;\n        }\n        // Update total price for transaction\n        totalPrice += newItems[i][j].totalPriceForItem;\n        // Rounding\n        newItems[i][j].totalPriceForItem = Math.round(newItems[i][j].totalPriceForItem * 100) / 100;\n      }\n      totalPrice = +totalPrice + +maxDeliveryFee;\n      totalPrice = Math.round(totalPrice * 100) / 100;\n    }\n    \n    this.setState({ total: totalPrice });\n\n  }\n\n  onCheckout() {\n    this.setState({ checkout: true });\n  }\n\n  // Change after demo day\n  async putFood(seller, newItem) {\n    await fetch(`http://localhost:8080/foodItems/${seller}`, {\n      method: 'PUT',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.state.token}`,\n      },\n      body: JSON.stringify(newItem)\n    }).then(response => {\n      // Do nothing\n    })\n    .catch(err => {\n      throw new Error(err)\n    })\n  }\n\n  async postOrder(newOrder) {\n    await fetch('http://localhost:8080/orders', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': `Bearer ${this.state.token}`,\n      },\n      body: JSON.stringify(newOrder)\n    }).then(response => {\n      // Do nothing\n    })\n    .catch(err => {\n      throw new Error(err)\n    })\n  }\n\n  async purchase(event) {\n\n    event.preventDefault();\n\n    if(this.state.items.length <= 0) {\n      return;\n    }\n    for (let i = 0; i < this.state.items.length; i++) {\n      for (let j = 0; j < this.state.items[i].length; j++) {\n        let newItem = {name: this.state.items[i][j].name,\n                      price: this.state.items[i][j].price, quantity: this.state.items[i][j].quantity,\n                      pickup: this.state.items[i][j].pickup, deliveryFee: this.state.items[i][j].deliveryFee};\n        // if (newItem.quantity <= 0) {\n          // await this.deleteFood(this.state.items[i][j].seller[0].email, newItem.name);\n        // } else {\n        await this.putFood(this.state.items[i][j].seller[0].email, newItem);\n        // }\n      }\n    }\n \n    // Add orders to database\n    for (let i = 0; i < this.state.items.length; i++) {\n      let newOrder = {};\n      if (this.state.items[i][0].delivery) {\n        newOrder = {seller: this.state.items[i][0].seller[0].name, buyer: this.state.user, foodItems: this.state.items[i], address: this.state.items[i][0].seller[0].address, type: \"delivery\" };\n      } else {\n        newOrder = {seller: this.state.items[i][0].seller[0].name, buyer: this.state.user, foodItems: this.state.items[i], address: this.state.items[i][0].seller[0].address, type: \"pickup\" };\n      }\n      await this.postOrder(newOrder);\n    }\n\n    // Remove after demo\n    let newOrders = this.state.pastOrders;\n    for (let i = 0; i < this.state.items.length; i++) {\n      \n      let totalPriceForSeller = 0;\n      let maxDeliveryFee = 0;\n      for (let j = 0; j < this.state.items[i].length; j++) {\n        // Update total price for transaction\n        totalPriceForSeller += this.state.items[i][j].totalPriceForItem;\n        // Rounding\n        totalPriceForSeller = Math.round(totalPriceForSeller * 100) / 100;\n      \n        \n        if (this.state.items[i][j].deliveryFee > maxDeliveryFee) {\n          maxDeliveryFee = this.state.items[i][j].deliveryFee;\n        }\n      }\n\n      if (this.state.items[i][0].delivery) {\n        totalPriceForSeller += maxDeliveryFee;\n        totalPriceForSeller = Math.round(totalPriceForSeller * 100) / 100;\n\n        newOrders.push( {seller: this.state.items[i][0].seller[0].name, time: \"11/19/2021\", total: totalPriceForSeller, buyer: this.state.user, foodItems: this.state.items[i], address: this.state.items[i][0].seller[0].address, type: \"Delivery\" } );\n      } else { \n        newOrders.push( {seller: this.state.items[i][0].seller[0].name, time: \"11/19/2021\", total: totalPriceForSeller, buyer: this.state.user, foodItems: this.state.items[i], address: this.state.items[i][0].seller[0].address, type: \"Pickup\" } );\n      }\n      \n    \n    }\n    this.setState({ pastOrders: newOrders });\n    console.log(newOrders);\n\n    this.setState({ items: [] });\n    this.setState({ total: 0 });\n    alert(\"Thank you for your purchase!\");\n\n    this.setState({ checkout: true });\n  }\n\n  render() {\n\n    if (this.state.user === \"\") {\n        return(\n          <Redirect to=\"/\" />\n        );\n    }\n\n    if (this.state.checkout) {\n      return (\n        <Redirect to={{ pathname: '/Checkout', state: { user: this.state.user, cart: this.state.items, pastOrders: this.state.pastOrders } }} />\n      );\n    }\n\n    return (\n      <React.Fragment>\n        <section className=\"content-container\">\n          \n          <h2 className=\"pageheader\">Total: ${this.state.total.toFixed(2)}</h2>\n          <button className=\"selectButton\" onClick={this.onCheckout}>\n            Return to Cart\n          </button>\n          <br />\n          <br />\n\n          <h2>Payment Details</h2>\n          <br />\n          <form onSubmit={this.purchase} id=\"login\">\n            \n            <div className=\"form-group text-left\">\n              Billing Address: <input className=\"form-control\"  required=\"true\" type=\"text\" name=\"billingAddress\"></input>\n            </div>\n            \n            <div className=\"form-group text-left\">\n              Credit Card Number: <input className=\"form-control\"  required=\"true\" type=\"text\" name=\"cardNumber\"></input>\n            </div>\n\n            <br/>\n\n            <div className=\"form-group text-left\">\n              <button className=\"form-control selectButton\">\n                Purchase\n              </button>\n            </div>\n            \n          </form>\n\n          <br />\n\n          \n        </section>\n      </React.Fragment>\n    );\n  }\n}"]},"metadata":{},"sourceType":"module"}