{"ast":null,"code":"var _jsxFileName = \"/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/components/pages/Login.js\";\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\n/**\n * Login page\n */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Whether or not someone logged in, used for Redirecting\n      loggedIn: false,\n      // Whether or not the logged in user is a buyer or a seller, used to determine which page to redirect the user to\n      seller: false,\n      // Username of logged in user to pass to other pages\n      user: \"\",\n      // Login\n      // Email the user logs in with\n      email: \"\",\n      // Password the user logs in with\n      password: \"\",\n      // Account creation\n      // Name of the new user\n      name: \"\",\n      // Email of the new user\n      newEmail: \"\",\n      // Password of the new user\n      newPassword: \"\",\n      // Address of the new user\n      address: \"\",\n      // If the new user is a seller\n      isSeller: false\n    }; // Binding\n\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.handleCheckboxChange = this.handleCheckboxChange.bind(this);\n    this.login = this.login.bind(this);\n    this.createUser = this.createUser.bind(this);\n    this.loginUser = this.loginUser.bind(this);\n    this.postUser = this.postUser.bind(this);\n    this.renderForm = this.renderForm.bind(this);\n    this.clearState = this.clearState.bind(this);\n  }\n  /**\n   * Makes a POST request to login as the provided user\n   * @param {User} user the user to login as\n   */\n\n\n  async loginUser(user) {\n    await fetch('http://localhost:8080/users/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    }).then(response => response.json()).then(responseJSON => responseJSON.response.data).then(responseData => {\n      this.setState({\n        user: responseData.email\n      });\n      this.setState({\n        seller: false\n      });\n      console.log(responseData);\n\n      if (responseData.role === 'seller') {\n        this.setState({\n          seller: true\n        });\n      }\n\n      this.setState({\n        loggedIn: true\n      });\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n  /**\n   * Makes a POST request to create a new user\n   * @param {User} newUser the user to create\n   * @param {*} role the role of the user (buyer or seller)\n   */\n\n\n  async postUser(newUser, role) {\n    await fetch(`http://localhost:8080/users/register/${role}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    }).then(res => {\n      if (!res.ok) {\n        res.text().then(text => {\n          alert(text);\n        });\n      } else {\n        alert(\"User created!\");\n      }\n    }).catch(err => {\n      console.log(err);\n      throw err;\n    });\n  }\n  /**\n   * Logs in as the user with the email and password in the login input fields by calling loginUser\n   * @param {Event} event login button click event\n   */\n\n\n  async login(event) {\n    event.preventDefault();\n\n    try {\n      let user = {\n        email: this.state.email,\n        password: this.state.password\n      };\n      await this.loginUser(user);\n    } catch (err) {\n      alert(\"Invalid credentials\");\n    }\n  }\n  /**\n   * Creates a new user with the values in the user creation input fields by calling postUser\n   * @param {Event} event create user button click event\n   */\n\n\n  async createUser(event) {\n    event.preventDefault();\n\n    try {\n      let newUser = {\n        name: this.state.name,\n        email: this.state.newEmail,\n        password: this.state.newPassword,\n        address: this.state.address\n      };\n\n      if (this.state.isSeller) {\n        await this.postUser(newUser, \"seller\");\n      } else {\n        await this.postUser(newUser, \"buyer\");\n      }\n    } catch (err) {\n      alert(err);\n    }\n\n    this.clearState();\n  }\n  /**\n   * Handles input box text changes\n   * @param {Event} event input box text change event\n   */\n\n\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n  /**\n   * Handles check box text changes\n   * @param {Event} event check box text change event\n   */\n\n\n  handleCheckboxChange(event) {\n    const checked = event.target.checked;\n    this.setState({\n      [event.target.name]: checked\n    });\n  }\n  /**\n   * Clears the input fields by resetting the state\n   */\n\n\n  clearState() {\n    this.setState({\n      name: \"\",\n      newEmail: \"\",\n      newPassword: \"\",\n      address: \"\",\n      isSeller: false\n    });\n  }\n  /**\n   * Renders the form for user login and new user creation\n   * @returns html for user login and new user creation\n   */\n\n\n  renderForm() {\n    // If the user has logged in\n    if (this.state.loggedIn) {\n      // If the user is a seller\n      if (this.state.seller) {\n        // If the user is a seller, redirect to /Seller with the user's email as the parameter\n        return /*#__PURE__*/_jsxDEV(Redirect, {\n          to: {\n            pathname: '/Seller',\n            state: {\n              user: this.state.user\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this);\n      } // If the user is a buyer, redirect to /Shop with the user's email and an empty cart as the parameters\n\n\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: {\n          pathname: '/Shop',\n          state: {\n            user: this.state.user,\n            cart: [],\n            pastOrders: []\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pageheader\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.login,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"text\",\n              name: \"email\",\n              value: this.state.email,\n              onChange: this.handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"password\",\n              name: \"password\",\n              value: this.state.password,\n              onChange: this.handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form-control selectButton\",\n              children: \"Login\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 12\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-left\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Create user\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.createUser,\n          id: \"login\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"text\",\n              name: \"name\",\n              value: this.state.name,\n              onChange: this.handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Email: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"email\",\n              name: \"newEmail\",\n              value: this.state.newEmail,\n              onChange: this.handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 24\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Password: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"password\",\n              name: \"newPassword\",\n              value: this.state.newPassword,\n              onChange: this.handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [\"Address: \", /*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-control\",\n              required: \"true\",\n              type: \"text\",\n              name: \"address\",\n              value: this.state.address,\n              onChange: this.handleTextChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              id: \"seller\",\n              name: \"isSeller\",\n              checked: this.state.isSeller,\n              onChange: this.handleCheckboxChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"seller\",\n              children: \" Seller\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 238,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group text-left\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"form-control selectButton\",\n              children: \"Create User\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 9\n    }, this);\n  }\n  /**\n   * Renders the login page\n   * @returns html for the login page\n   */\n\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"content-container\",\n        children: this.renderForm()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/components/pages/Login.js"],"names":["React","Redirect","Login","Component","constructor","props","state","loggedIn","seller","user","email","password","name","newEmail","newPassword","address","isSeller","handleTextChange","bind","handleCheckboxChange","login","createUser","loginUser","postUser","renderForm","clearState","fetch","method","credentials","headers","body","JSON","stringify","then","response","json","responseJSON","data","responseData","setState","console","log","role","catch","err","Error","newUser","res","ok","text","alert","event","preventDefault","value","target","checked","pathname","cart","pastOrders","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,kBAAzB;AAEA;AACA;AACA;;;AACA,eAAe,MAAMC,KAAN,SAAoBF,KAAK,CAACG,SAA1B,CAAoC;AACjDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACX;AACAC,MAAAA,QAAQ,EAAE,KAFC;AAGX;AACAC,MAAAA,MAAM,EAAE,KAJG;AAKX;AACAC,MAAAA,IAAI,EAAE,EANK;AAQX;AACA;AACAC,MAAAA,KAAK,EAAE,EAVI;AAWX;AACAC,MAAAA,QAAQ,EAAE,EAZC;AAcX;AACA;AACAC,MAAAA,IAAI,EAAC,EAhBM;AAiBX;AACAC,MAAAA,QAAQ,EAAC,EAlBE;AAmBX;AACAC,MAAAA,WAAW,EAAE,EApBF;AAqBX;AACAC,MAAAA,OAAO,EAAE,EAtBE;AAuBX;AACAC,MAAAA,QAAQ,EAAE;AAxBC,KAAb,CAFiB,CA6BjB;;AACA,SAAKC,gBAAL,GAAsB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAtB;AACA,SAAKC,oBAAL,GAA0B,KAAKA,oBAAL,CAA0BD,IAA1B,CAA+B,IAA/B,CAA1B;AACA,SAAKE,KAAL,GAAW,KAAKA,KAAL,CAAWF,IAAX,CAAgB,IAAhB,CAAX;AACA,SAAKG,UAAL,GAAgB,KAAKA,UAAL,CAAgBH,IAAhB,CAAqB,IAArB,CAAhB;AACA,SAAKI,SAAL,GAAe,KAAKA,SAAL,CAAeJ,IAAf,CAAoB,IAApB,CAAf;AACA,SAAKK,QAAL,GAAc,KAAKA,QAAL,CAAcL,IAAd,CAAmB,IAAnB,CAAd;AACA,SAAKM,UAAL,GAAgB,KAAKA,UAAL,CAAgBN,IAAhB,CAAqB,IAArB,CAAhB;AACA,SAAKO,UAAL,GAAgB,KAAKA,UAAL,CAAgBP,IAAhB,CAAqB,IAArB,CAAhB;AACD;AAED;AACF;AACA;AACA;;;AACiB,QAATI,SAAS,CAACb,IAAD,EAAO;AACpB,UAAMiB,KAAK,CAAC,mCAAD,EAAsC;AAC/CC,MAAAA,MAAM,EAAE,MADuC;AAE/CC,MAAAA,WAAW,EAAE,SAFkC;AAG/CC,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAHsC;AAM/CC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAevB,IAAf;AANyC,KAAtC,CAAL,CAQLwB,IARK,CAQAC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EARZ,EASLF,IATK,CASAG,YAAY,IAAIA,YAAY,CAACF,QAAb,CAAsBG,IATtC,EAULJ,IAVK,CAUAK,YAAY,IAAI;AACpB,WAAKC,QAAL,CAAc;AAAE9B,QAAAA,IAAI,EAAE6B,YAAY,CAAC5B;AAArB,OAAd;AACA,WAAK6B,QAAL,CAAc;AAAE/B,QAAAA,MAAM,EAAE;AAAV,OAAd;AACAgC,MAAAA,OAAO,CAACC,GAAR,CAAYH,YAAZ;;AACA,UAAIA,YAAY,CAACI,IAAb,KAAsB,QAA1B,EAAoC;AAClC,aAAKH,QAAL,CAAc;AAAE/B,UAAAA,MAAM,EAAE;AAAV,SAAd;AACD;;AACD,WAAK+B,QAAL,CAAc;AAAEhC,QAAAA,QAAQ,EAAE;AAAZ,OAAd;AAED,KAnBK,EAoBLoC,KApBK,CAoBCC,GAAG,IAAI;AACZ,YAAM,IAAIC,KAAJ,CAAUD,GAAV,CAAN;AACD,KAtBK,CAAN;AAuBD;AAED;AACF;AACA;AACA;AACA;;;AACgB,QAARrB,QAAQ,CAACuB,OAAD,EAAUJ,IAAV,EAAgB;AAC5B,UAAMhB,KAAK,CAAE,wCAAuCgB,IAAK,EAA9C,EAAiD;AAC1Df,MAAAA,MAAM,EAAE,MADkD;AAE1DE,MAAAA,OAAO,EAAE;AACP,wBAAgB;AADT,OAFiD;AAK1DC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAec,OAAf;AALoD,KAAjD,CAAL,CAMHb,IANG,CAMEc,GAAG,IAAI;AAEb,UAAI,CAACA,GAAG,CAACC,EAAT,EAAY;AACVD,QAAAA,GAAG,CAACE,IAAJ,GAAWhB,IAAX,CAAgBgB,IAAI,IAAI;AAACC,UAAAA,KAAK,CAACD,IAAD,CAAL;AAAY,SAArC;AACD,OAFD,MAEO;AACLC,QAAAA,KAAK,CAAC,eAAD,CAAL;AACD;AAEF,KAdK,EAcHP,KAdG,CAcGC,GAAG,IAAI;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAYG,GAAZ;AACA,YAAMA,GAAN;AACD,KAjBK,CAAN;AAkBD;AAED;AACF;AACA;AACA;;;AACa,QAALxB,KAAK,CAAC+B,KAAD,EAAQ;AACjBA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACF,UAAI3C,IAAI,GAAG;AAACC,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAAnB;AAA0BC,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWK;AAA/C,OAAX;AACA,YAAM,KAAKW,SAAL,CAAeb,IAAf,CAAN;AAED,KAJD,CAIE,OAAOmC,GAAP,EAAY;AACZM,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACD;AAEF;AAED;AACF;AACA;AACA;;;AACkB,QAAV7B,UAAU,CAAC8B,KAAD,EAAQ;AACtBA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAI;AACF,UAAIN,OAAO,GAAG;AAAClC,QAAAA,IAAI,EAAE,KAAKN,KAAL,CAAWM,IAAlB;AAAwBF,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWO,QAA1C;AAAoDF,QAAAA,QAAQ,EAAE,KAAKL,KAAL,CAAWQ,WAAzE;AAAsFC,QAAAA,OAAO,EAAE,KAAKT,KAAL,CAAWS;AAA1G,OAAd;;AACA,UAAI,KAAKT,KAAL,CAAWU,QAAf,EAAyB;AACvB,cAAM,KAAKO,QAAL,CAAcuB,OAAd,EAAuB,QAAvB,CAAN;AACD,OAFD,MAEO;AACL,cAAM,KAAKvB,QAAL,CAAcuB,OAAd,EAAuB,OAAvB,CAAN;AACD;AACF,KAPD,CAOE,OAAOF,GAAP,EAAY;AACZM,MAAAA,KAAK,CAACN,GAAD,CAAL;AACD;;AAED,SAAKnB,UAAL;AACD;AAED;AACF;AACA;AACA;;;AACER,EAAAA,gBAAgB,CAACkC,KAAD,EAAQ;AACtB,UAAME,KAAK,GAAGF,KAAK,CAACG,MAAN,CAAaD,KAA3B;AACA,SAAKd,QAAL,CAAc;AACZ,OAACY,KAAK,CAACG,MAAN,CAAa1C,IAAd,GAAqByC;AADT,KAAd;AAGD;AAED;AACF;AACA;AACA;;;AACElC,EAAAA,oBAAoB,CAACgC,KAAD,EAAQ;AAC1B,UAAMI,OAAO,GAAGJ,KAAK,CAACG,MAAN,CAAaC,OAA7B;AACA,SAAKhB,QAAL,CAAc;AACZ,OAACY,KAAK,CAACG,MAAN,CAAa1C,IAAd,GAAqB2C;AADT,KAAd;AAGD;AAED;AACF;AACA;;;AACE9B,EAAAA,UAAU,GAAG;AACX,SAAKc,QAAL,CAAc;AAAE3B,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,QAAQ,EAAE,EAAtB;AAA0BC,MAAAA,WAAW,EAAE,EAAvC;AAA2CC,MAAAA,OAAO,EAAE,EAApD;AAAwDC,MAAAA,QAAQ,EAAE;AAAlE,KAAd;AACD;AAED;AACF;AACA;AACA;;;AACEQ,EAAAA,UAAU,GAAG;AACX;AACA,QAAI,KAAKlB,KAAL,CAAWC,QAAf,EAAyB;AACvB;AACA,UAAI,KAAKD,KAAL,CAAWE,MAAf,EAAuB;AACrB;AACA,4BACE,QAAC,QAAD;AAAU,UAAA,EAAE,EAAE;AAAEgD,YAAAA,QAAQ,EAAE,SAAZ;AAAuBlD,YAAAA,KAAK,EAAE;AAAEG,cAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG;AAAnB;AAA9B;AAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAGD,OAPsB,CAQvB;;;AACA,0BACE,QAAC,QAAD;AAAU,QAAA,EAAE,EAAE;AAAE+C,UAAAA,QAAQ,EAAE,OAAZ;AAAqBlD,UAAAA,KAAK,EAAE;AAAEG,YAAAA,IAAI,EAAE,KAAKH,KAAL,CAAWG,IAAnB;AAAyBgD,YAAAA,IAAI,EAAE,EAA/B;AAAmCC,YAAAA,UAAU,EAAE;AAA/C;AAA5B;AAAd;AAAA;AAAA;AAAA;AAAA,cADF;AAGD;;AAED,wBACI;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA,8BAEG;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADD,eAEC;AAAA;AAAA;AAAA;AAAA,gBAFD,eAGC;AAAM,UAAA,QAAQ,EAAE,KAAKtC,KAArB;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,+CACS;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,QAAQ,EAAC,MAAzC;AAAgD,cAAA,IAAI,EAAC,MAArD;AAA4D,cAAA,IAAI,EAAC,OAAjE;AAAyE,cAAA,KAAK,EAAE,KAAKd,KAAL,CAAWI,KAA3F;AAAkG,cAAA,QAAQ,EAAE,KAAKO;AAAjH;AAAA;AAAA;AAAA;AAAA,oBADT;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAKE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,kDACY;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,QAAQ,EAAC,MAA1C;AAAiD,cAAA,IAAI,EAAC,UAAtD;AAAiE,cAAA,IAAI,EAAC,UAAtE;AAAiF,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWK,QAAnG;AAA6G,cAAA,QAAQ,EAAE,KAAKM;AAA5H;AAAA;AAAA;AAAA;AAAA,oBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBALF,eASE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACE;AAAQ,cAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBATF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHD;AAAA;AAAA;AAAA;AAAA;AAAA,cAFH,eAsBI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFA,eAGA;AAAA;AAAA;AAAA;AAAA,gBAHA,eAIA;AAAM,UAAA,QAAQ,EAAE,KAAKI,UAArB;AAAiC,UAAA,EAAE,EAAC,OAApC;AAAA,kCAEE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,8CACQ;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAiC,cAAA,QAAQ,EAAC,MAA1C;AAAiD,cAAA,IAAI,EAAC,MAAtD;AAA6D,cAAA,IAAI,EAAC,MAAlE;AAAyE,cAAA,KAAK,EAAE,KAAKf,KAAL,CAAWM,IAA3F;AAAiG,cAAA,QAAQ,EAAE,KAAKK;AAAhH;AAAA;AAAA;AAAA;AAAA,oBADR;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFF,eAME;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,+CACS;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAiC,cAAA,QAAQ,EAAC,MAA1C;AAAiD,cAAA,IAAI,EAAC,OAAtD;AAA8D,cAAA,IAAI,EAAC,UAAnE;AAA8E,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWO,QAAhG;AAA0G,cAAA,QAAQ,EAAE,KAAKI;AAAzH;AAAA;AAAA;AAAA;AAAA,oBADT;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,eAUE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,kDACY;AAAQ,cAAA,SAAS,EAAC,cAAlB;AAAiC,cAAA,QAAQ,EAAC,MAA1C;AAAiD,cAAA,IAAI,EAAC,UAAtD;AAAiE,cAAA,IAAI,EAAC,aAAtE;AAAoF,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWQ,WAAtG;AAAmH,cAAA,QAAQ,EAAE,KAAKG;AAAlI;AAAA;AAAA;AAAA;AAAA,oBADZ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAVF,eAcE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,iDACW;AAAO,cAAA,SAAS,EAAC,cAAjB;AAAgC,cAAA,QAAQ,EAAC,MAAzC;AAAgD,cAAA,IAAI,EAAC,MAArD;AAA4D,cAAA,IAAI,EAAC,SAAjE;AAA2E,cAAA,KAAK,EAAE,KAAKX,KAAL,CAAWS,OAA7F;AAAsG,cAAA,QAAQ,EAAE,KAAKE;AAArH;AAAA;AAAA;AAAA;AAAA,oBADX;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdF,eAkBE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,oCACA;AAAO,cAAA,IAAI,EAAC,UAAZ;AAAuB,cAAA,EAAE,EAAC,QAA1B;AAAmC,cAAA,IAAI,EAAC,UAAxC;AAAmD,cAAA,OAAO,EAAE,KAAKX,KAAL,CAAWU,QAAvE;AAAiF,cAAA,QAAQ,EAAE,KAAKG;AAAhG;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAO,cAAA,OAAO,EAAC,QAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAlBF,eAuBE;AAAK,YAAA,SAAS,EAAC,sBAAf;AAAA,mCACA;AAAQ,cAAA,SAAS,EAAC,2BAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBAvBF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJA;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AA6DD;AAED;AACF;AACA;AACA;;;AACEwC,EAAAA,MAAM,GAAG;AACP,wBACE,QAAC,KAAD,CAAO,QAAP;AAAA,6BACE;AAAS,QAAA,SAAS,EAAC,mBAAnB;AAAA,kBACG,KAAKnC,UAAL;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAOD;;AAnQgD","sourcesContent":["import React from 'react';\nimport { Redirect } from 'react-router-dom';\n\n/**\n * Login page\n */\nexport default class Login extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // Whether or not someone logged in, used for Redirecting\n      loggedIn: false,\n      // Whether or not the logged in user is a buyer or a seller, used to determine which page to redirect the user to\n      seller: false,\n      // Username of logged in user to pass to other pages\n      user: \"\",\n\n      // Login\n      // Email the user logs in with\n      email: \"\",\n      // Password the user logs in with\n      password: \"\",\n      \n      // Account creation\n      // Name of the new user\n      name:\"\",\n      // Email of the new user\n      newEmail:\"\",\n      // Password of the new user\n      newPassword: \"\",\n      // Address of the new user\n      address: \"\",\n      // If the new user is a seller\n      isSeller: false,\n    };\n\n    // Binding\n    this.handleTextChange=this.handleTextChange.bind(this);\n    this.handleCheckboxChange=this.handleCheckboxChange.bind(this);\n    this.login=this.login.bind(this);\n    this.createUser=this.createUser.bind(this);\n    this.loginUser=this.loginUser.bind(this);\n    this.postUser=this.postUser.bind(this);\n    this.renderForm=this.renderForm.bind(this);\n    this.clearState=this.clearState.bind(this);\n  }\n\n  /**\n   * Makes a POST request to login as the provided user\n   * @param {User} user the user to login as\n   */\n  async loginUser(user) {\n    await fetch('http://localhost:8080/users/login', {\n      method: 'POST',\n      credentials: 'include',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(user)\n    })\n    .then(response => response.json())\n    .then(responseJSON => responseJSON.response.data)\n    .then(responseData => {\n      this.setState({ user: responseData.email });\n      this.setState({ seller: false });\n      console.log(responseData);\n      if (responseData.role === 'seller') {\n        this.setState({ seller: true });\n      }\n      this.setState({ loggedIn: true })\n      \n    })\n    .catch(err => {\n      throw new Error(err);\n    })\n  }\n\n  /**\n   * Makes a POST request to create a new user\n   * @param {User} newUser the user to create\n   * @param {*} role the role of the user (buyer or seller)\n   */\n  async postUser(newUser, role) {\n    await fetch(`http://localhost:8080/users/register/${role}`, {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify(newUser)\n    }).then(res => {\n     \n      if (!res.ok){\n        res.text().then(text => {alert(text)})\n      } else {\n        alert(\"User created!\");\n      }\n    \n    }).catch(err => {\n      console.log(err);\n      throw err;\n    })\n  }\n\n  /**\n   * Logs in as the user with the email and password in the login input fields by calling loginUser\n   * @param {Event} event login button click event\n   */\n  async login(event) {\n    event.preventDefault();\n\n    try {\n      let user = {email: this.state.email, password: this.state.password };\n      await this.loginUser(user);\n\n    } catch (err) {\n      alert(\"Invalid credentials\");\n    }\n\n  }\n\n  /**\n   * Creates a new user with the values in the user creation input fields by calling postUser\n   * @param {Event} event create user button click event\n   */\n  async createUser(event) {\n    event.preventDefault();\n\n    try {\n      let newUser = {name: this.state.name, email: this.state.newEmail, password: this.state.newPassword, address: this.state.address };\n      if (this.state.isSeller) {\n        await this.postUser(newUser, \"seller\");\n      } else {\n        await this.postUser(newUser, \"buyer\");\n      }\n    } catch (err) {\n      alert(err);\n    }\n\n    this.clearState();\n  }\n\n  /**\n   * Handles input box text changes\n   * @param {Event} event input box text change event\n   */\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  /**\n   * Handles check box text changes\n   * @param {Event} event check box text change event\n   */\n  handleCheckboxChange(event) {\n    const checked = event.target.checked;\n    this.setState({\n      [event.target.name]: checked\n    });\n  }\n\n  /**\n   * Clears the input fields by resetting the state\n   */\n  clearState() {\n    this.setState({ name: \"\", newEmail: \"\", newPassword: \"\", address: \"\", isSeller: false});\n  }\n\n  /**\n   * Renders the form for user login and new user creation\n   * @returns html for user login and new user creation\n   */\n  renderForm() {\n    // If the user has logged in\n    if (this.state.loggedIn) {\n      // If the user is a seller\n      if (this.state.seller) {\n        // If the user is a seller, redirect to /Seller with the user's email as the parameter\n        return (\n          <Redirect to={{ pathname: '/Seller', state: { user: this.state.user } }} />\n        );\n      }\n      // If the user is a buyer, redirect to /Shop with the user's email and an empty cart as the parameters\n      return (\n        <Redirect to={{ pathname: '/Shop', state: { user: this.state.user, cart: [], pastOrders: [] } }} />\n      );\n    }\n\n    return (\n        <div className=\"pageheader\">\n          \n           <div className=\"col-left\">\n            <h2>Login</h2>\n            <br />\n            <form onSubmit={this.login}>\n              <div className=\"form-group text-left\">\n                Email: <input className=\"form-control\" required=\"true\" type=\"text\" name=\"email\" value={this.state.email} onChange={this.handleTextChange}></input>\n              </div>\n\n              <div className=\"form-group text-left\">\n                Password: <input  className=\"form-control\" required=\"true\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleTextChange}></input>\n              </div>\n\n              <div className=\"form-group text-left\">\n                <button className=\"form-control selectButton\">  \n                Login\n               </button>\n               </div>\n              </form>\n              </div>\n       \n            <div className=\"col-left\">\n          \n            <h2>Create user</h2>\n            <br />\n            <form onSubmit={this.createUser} id=\"login\">\n              \n              <div className=\"form-group text-left\">\n                Name: <input className=\"form-control\"  required=\"true\" type=\"text\" name=\"name\" value={this.state.name} onChange={this.handleTextChange}></input>\n              </div>\n              \n              <div className=\"form-group text-left\">\n                Email: <input className=\"form-control\"  required=\"true\" type=\"email\" name=\"newEmail\" value={this.state.newEmail} onChange={this.handleTextChange}></input>\n              </div>\n\n              <div className=\"form-group text-left\">\n                Password: <input  className=\"form-control\" required=\"true\" type=\"password\" name=\"newPassword\" value={this.state.newPassword} onChange={this.handleTextChange}></input>\n              </div>\n\n              <div className=\"form-group text-left\">\n                Address: <input className=\"form-control\" required=\"true\" type=\"text\" name=\"address\" value={this.state.address} onChange={this.handleTextChange}></input>\n              </div>\n\n              <div className=\"form-group text-left\">\n              <input type=\"checkbox\" id=\"seller\" name=\"isSeller\" checked={this.state.isSeller} onChange={this.handleCheckboxChange} />\n              <label htmlFor=\"seller\"> Seller</label>\n              </div>\n\n              <div className=\"form-group text-left\">\n              <button className=\"form-control selectButton\">\n                Create User\n              </button>\n              </div>\n              \n            </form>\n            </div>\n         \n        </div>\n    );\n  }\n\n  /**\n   * Renders the login page\n   * @returns html for the login page\n   */\n  render() {\n    return (\n      <React.Fragment>\n        <section className=\"content-container\">\n          {this.renderForm()}\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}