{"ast":null,"code":"var _jsxFileName = \"/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/components/pages/Seller.js\";\nimport React from 'react';\nimport { Redirect } from \"react-router-dom\";\nimport '@fortawesome/fontawesome-free/css/all.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport './FoodItems.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: this.props.price,\n      amount: this.props.amount,\n      pickup: this.props.pickup,\n      delivery: this.props.delivery\n    };\n    this.handleTextChange = this.handleTextChange.bind(this);\n  }\n\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemColumns\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemValues\",\n        align: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Name: \", this.props.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), \"Price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"priceInput\",\n          name: \"price\",\n          value: this.state.price,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), \"Amount: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"amountInput\",\n          name: \"amount\",\n          min: \"0\",\n          value: this.state.amount,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), \"Pickup: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"pickupInput\",\n          name: \"pickup\",\n          value: this.state.pickup,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 19\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this), \"Delivery: \", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"deliveryInput\",\n          name: \"delivery\",\n          value: this.state.delivery,\n          onChange: this.handleTextChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"itemButton\",\n          onClick: () => {\n            this.props.save(this.props.id, this.props.name, this.state.price, this.state.amount, this.state.pickup, this.state.delivery);\n          },\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"itemButton\",\n          onClick: () => {\n            this.props.discard(this.props.seller, this.props.name);\n          },\n          children: \"Discard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default class Seller extends React.Component {\n  constructor(props) {\n    super(props);\n    var user;\n\n    if (this.props.location.state === undefined) {\n      user = \"\";\n    } else {\n      user = this.props.location.state.user;\n    }\n\n    this.state = {\n      user: user,\n      id: 0,\n      items: [],\n      displayItem: 0,\n      newName: \"\",\n      newPrice: \"\",\n      newAmount: \"\",\n      newPickup: \"\",\n      newDelivery: \"\"\n    };\n    this.addFood = this.addFood.bind(this);\n    this.handleTextChange = this.handleTextChange.bind(this);\n    this.save = this.save.bind(this);\n    this.discard = this.discard.bind(this);\n    this.getFoodItems = this.getFoodItems.bind(this);\n    this.addTestingValues = this.addTestingValues.bind(this);\n    this.getFoodItems();\n  }\n\n  async getFoodItems() {\n    await fetch('http://localhost:8080/foodItems', {\n      method: 'GET'\n    }).then(response => response.json()).then(responseJSON => {\n      let newItems = [];\n\n      for (let i = 0; i < responseJSON.length; i++) {\n        if (responseJSON[i].seller === this.state.user) {\n          newItems.push(responseJSON[i]);\n        }\n      }\n\n      this.setState({\n        items: newItems\n      });\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n\n  async postFood(newItem) {\n    await fetch('http://localhost:8080/foodItem', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem)\n    }).then(() => this.getFoodItems()).catch(err => {\n      throw new Error(err);\n    });\n  }\n\n  async deleteFood(seller, name) {\n    await fetch(`http://localhost:8080/foodItem/${seller}/${name}`, {\n      method: 'DELETE'\n    }).then(() => this.getFoodItems()).catch(err => {\n      throw new Error(err);\n    });\n  }\n\n  async putFood(newItem) {\n    await fetch('http://localhost:8080/foodItem', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem)\n    }).then(response => {// Do nothing\n    }).catch(err => {\n      throw new Error(err);\n    });\n  }\n\n  addFood(event) {\n    event.preventDefault();\n    let newItem = {\n      seller: this.state.user,\n      name: this.state.newName,\n      price: this.state.newPrice,\n      amount: this.state.newAmount,\n      pickup: this.state.newPickup,\n      delivery: this.state.newDelivery\n    };\n    this.postFood(newItem); //Reset input boxes\n\n    this.setState({\n      newName: \"\"\n    });\n    this.setState({\n      newPrice: \"\"\n    });\n    this.setState({\n      newAmount: \"\"\n    });\n    this.setState({\n      newPickup: \"\"\n    });\n    this.setState({\n      newDelivery: \"\"\n    });\n  }\n\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  save(idx, name, price, amount, pickup, delivery) {\n    let newItem = {\n      seller: this.state.user,\n      name: name,\n      price: price,\n      amount: amount,\n      pickup: pickup,\n      delivery: delivery\n    };\n    this.putFood(newItem);\n  }\n\n  discard(seller, name) {\n    this.deleteFood(seller, name);\n  }\n\n  renderCards() {\n    var cards = [];\n\n    for (let i = 0; i < this.state.items.length; i++) {\n      cards.push( /*#__PURE__*/_jsxDEV(Card, {\n        id: i,\n        seller: this.state.user,\n        name: this.state.items[i].name,\n        price: this.state.items[i].price,\n        amount: this.state.items[i].amount,\n        pickup: this.state.items[i].pickup,\n        delivery: this.state.items[i].delivery,\n        save: this.save,\n        discard: this.discard\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 18\n      }, this));\n    }\n\n    return cards;\n  }\n\n  addTestingValues() {\n    let newFood = {\n      seller: this.state.user,\n      name: \"Tomatoes\",\n      price: 1.23,\n      amount: 15,\n      pickup: \"Address Dr\",\n      delivery: 5.99\n    };\n    this.postFood(newFood);\n    newFood = {\n      seller: this.state.user,\n      name: \"Leftover Pasta\",\n      price: 0.78,\n      amount: 9,\n      pickup: \"Address Dr\",\n      delivery: 5.99\n    };\n    this.postFood(newFood);\n    newFood = {\n      seller: this.state.user,\n      name: \"Cabbages\",\n      price: 3.45,\n      amount: 2,\n      pickup: \"Address Dr\",\n      delivery: 5.99\n    };\n    this.postFood(newFood);\n  }\n\n  renderForm() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"itemColumns\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"itemValues\",\n        align: \"center\",\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: this.addFood,\n          children: [\"Food name: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newName\",\n            value: this.state.newName,\n            onChange: this.handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 26\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), \"Price: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newPrice\",\n            value: this.state.newPrice,\n            onChange: this.handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 22\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this), \"Amount: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            name: \"newAmount\",\n            value: this.state.newAmount,\n            onChange: this.handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), \"Pickup: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newPickup\",\n            value: this.state.newPickup,\n            onChange: this.handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), \"Delivery fee: \", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            name: \"newDelivery\",\n            value: this.state.newDelivery,\n            onChange: this.handleTextChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"itemButton\",\n            children: \"Add food\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 215,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 9\n    }, this);\n  }\n\n  render() {\n    if (this.state.user === \"\") {\n      return /*#__PURE__*/_jsxDEV(Redirect, {\n        to: \"/\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 11\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"content-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"pageheader\",\n          children: \"Seller Dashboard\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 252,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), this.renderCards(), this.renderForm(), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"itemColumns\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"itemValues\",\n            align: \"center\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"itemButton\",\n              onClick: this.addTestingValues,\n              children: \"Populate with testing items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 259,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }, this);\n  }\n\n}","map":{"version":3,"sources":["/Users/neelpatel/Desktop/Classes/342/Project/frontend-react/src/components/pages/Seller.js"],"names":["React","Redirect","Card","Component","constructor","props","state","price","amount","pickup","delivery","handleTextChange","bind","event","value","target","setState","name","render","save","id","discard","seller","Seller","user","location","undefined","items","displayItem","newName","newPrice","newAmount","newPickup","newDelivery","addFood","getFoodItems","addTestingValues","fetch","method","then","response","json","responseJSON","newItems","i","length","push","catch","err","Error","postFood","newItem","headers","body","JSON","stringify","deleteFood","putFood","preventDefault","idx","renderCards","cards","newFood","renderForm"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { Redirect } from \"react-router-dom\";\n\nimport '@fortawesome/fontawesome-free/css/all.min.css'; \nimport 'bootstrap-css-only/css/bootstrap.min.css'; \nimport './FoodItems.css'\n\nclass Card extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      price: this.props.price,\n      amount: this.props.amount,\n      pickup: this.props.pickup,\n      delivery: this.props.delivery,\n    };\n    this.handleTextChange=this.handleTextChange.bind(this);\n  }\n\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  render () {\n    return (\n      <div className=\"itemColumns\">\n        <div className=\"itemValues\" align=\"center\">\n          <p>Name: {this.props.name}</p>\n          Price: <input type=\"text\" className=\"priceInput\" name=\"price\" value={this.state.price} onChange={this.handleTextChange}></input>\n          <br />\n          <br />\n          Amount: <input type=\"number\" className=\"amountInput\" name=\"amount\" min='0' value={this.state.amount} onChange={this.handleTextChange}></input>\n          <br />\n          <br />\n          Pickup: <input type=\"text\" className=\"pickupInput\" name=\"pickup\" value={this.state.pickup} onChange={this.handleTextChange}></input>\n          <br />\n          <br />\n          Delivery: <input type=\"text\" className=\"deliveryInput\" name=\"delivery\" value={this.state.delivery} onChange={this.handleTextChange}></input>\n          <br />\n          <br />\n\n          <button className=\"itemButton\" onClick={() => {\n            this.props.save(this.props.id, this.props.name, this.state.price, this.state.amount, this.state.pickup, this.state.delivery);\n          }}>Save</button>\n          <button className=\"itemButton\" onClick={() => {\n            this.props.discard(this.props.seller, this.props.name);\n          }}>Discard</button>\n        </div>\n      </div>\n    );\n  }\n\n}\n\nexport default class Seller extends React.Component {\n  constructor(props) {\n    super(props);\n\n    var user;\n    if (this.props.location.state === undefined) {\n      user = \"\";\n    } else {\n      user = this.props.location.state.user;\n    }\n\n    this.state = {\n      user: user,\n      id: 0,\n      items: [],\n      displayItem: 0,\n      newName: \"\",\n      newPrice: \"\",\n      newAmount: \"\",\n      newPickup: \"\",\n      newDelivery: \"\",\n    };\n    this.addFood=this.addFood.bind(this);\n    this.handleTextChange=this.handleTextChange.bind(this);\n    this.save=this.save.bind(this);\n    this.discard=this.discard.bind(this);\n    this.getFoodItems=this.getFoodItems.bind(this);\n    this.addTestingValues=this.addTestingValues.bind(this);\n\n    this.getFoodItems();\n  }\n\n  async getFoodItems(){\n    await fetch('http://localhost:8080/foodItems', {\n      method: 'GET',\n    })\n    .then(response => response.json())\n    .then(responseJSON => {\n      let newItems = [];\n      for (let i = 0; i < responseJSON.length; i++) {\n        if (responseJSON[i].seller === this.state.user) {\n          newItems.push(responseJSON[i]);\n        }\n      }\n      this.setState({items: newItems});\n    })\n    .catch(err => {\n      throw new Error(err)\n    })\n  }\n\n  async postFood(newItem) {\n    await fetch('http://localhost:8080/foodItem', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem)\n    })\n    .then(() => this.getFoodItems())\n    .catch(err => {\n      throw new Error(err)\n    })\n  }\n\n  async deleteFood(seller, name) {\n    await fetch(`http://localhost:8080/foodItem/${seller}/${name}`, {\n      method: 'DELETE',\n    })\n    .then(() => this.getFoodItems())\n    .catch(err => {\n      throw new Error(err)\n    })\n  }\n\n  async putFood(newItem) {\n    await fetch('http://localhost:8080/foodItem', {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newItem)\n    }).then(response => {\n      // Do nothing\n    })\n    .catch(err => {\n      throw new Error(err)\n    })\n  }\n\n  addFood(event) {\n    event.preventDefault();\n\n    let newItem = {seller: this.state.user, name: this.state.newName,\n                  price: this.state.newPrice, amount: this.state.newAmount,\n                  pickup: this.state.newPickup, delivery: this.state.newDelivery};\n\n    this.postFood(newItem);\n\n    //Reset input boxes\n    this.setState({newName: \"\"});\n    this.setState({newPrice: \"\"});\n    this.setState({newAmount: \"\"});\n    this.setState({newPickup: \"\"});\n    this.setState({newDelivery: \"\"});\n  }\n\n  handleTextChange(event) {\n    const value = event.target.value;\n    this.setState({\n      [event.target.name]: value\n    });\n  }\n\n  save(idx, name, price, amount, pickup, delivery) {\n    let newItem = {seller: this.state.user, name: name,\n                  price: price, amount: amount,\n                  pickup: pickup, delivery: delivery};\n\n    this.putFood(newItem);\n  }\n\n  discard(seller, name) {\n    this.deleteFood(seller, name);\n  }\n\n  renderCards() {\n    var cards = [];\n    for (let i = 0; i < this.state.items.length; i++) {\n      cards.push(<Card\n              key={i}\n              id={i}\n              seller={this.state.user}\n              name={this.state.items[i].name}\n              price={this.state.items[i].price}\n              amount={this.state.items[i].amount}\n              pickup={this.state.items[i].pickup}\n              delivery={this.state.items[i].delivery}\n              save={this.save}\n              discard={this.discard}\n            />);\n    }\n    return cards;\n  }\n\n  addTestingValues() {\n    let newFood = {seller: this.state.user, name: \"Tomatoes\", price: 1.23, amount: 15, pickup: \"Address Dr\", delivery: 5.99};\n    this.postFood(newFood);\n    newFood = {seller: this.state.user, name: \"Leftover Pasta\", price: 0.78, amount: 9, pickup: \"Address Dr\", delivery: 5.99};\n    this.postFood(newFood);\n    newFood = {seller: this.state.user, name: \"Cabbages\", price: 3.45, amount: 2, pickup: \"Address Dr\", delivery: 5.99};\n    this.postFood(newFood);\n  }\n\n  renderForm() {\n    return (\n        <div className=\"itemColumns\">\n          <div className=\"itemValues\" align=\"center\">\n            <form onSubmit={this.addFood}>\n              Food name: <input type=\"text\" name=\"newName\" value={this.state.newName} onChange={this.handleTextChange}></input>\n              <br />\n              <br />\n              Price: <input type=\"text\" name=\"newPrice\" value={this.state.newPrice} onChange={this.handleTextChange}></input>\n              <br />\n              <br />\n              Amount: <input type=\"number\" name=\"newAmount\" value={this.state.newAmount} onChange={this.handleTextChange}></input>\n              <br />\n              <br />\n              Pickup: <input type=\"text\" name=\"newPickup\" value={this.state.newPickup} onChange={this.handleTextChange}></input>\n              <br />\n              <br />\n              Delivery fee: <input type=\"text\" name=\"newDelivery\" value={this.state.newDelivery} onChange={this.handleTextChange}></input>\n              <br />\n              <br />\n              <button className=\"itemButton\">\n                Add food\n              </button>\n            </form>\n          </div>\n        </div>\n    );\n  }\n\n  render() {\n    if (this.state.user === \"\") {\n        return(\n          <Redirect to=\"/\" />\n        );\n    }\n\n    return (\n      <React.Fragment>\n        <section className=\"content-container\">\n          <h1 className=\"pageheader\">Seller Dashboard</h1>\n          <br />\n          <br />\n          {this.renderCards()}\n\n          {this.renderForm()}\n        \n\n          <div className=\"itemColumns\">\n            <div className=\"itemValues\" align=\"center\">\n              <button className=\"itemButton\" onClick={this.addTestingValues}>\n                Populate with testing items\n              </button>\n            </div>\n          </div>\n\n        </section>\n      </React.Fragment>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}